{"ast":null,"code":"var _jsxFileName = \"E:\\\\DuiPangres\\\\frontend\\\\src\\\\screens\\\\AddBusiness.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useReducer, useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport axios from 'axios';\nimport { Store } from '../Store';\nimport { getError } from '../utils';\nimport Container from 'react-bootstrap/Container';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Form from 'react-bootstrap/Form';\nimport { Helmet } from 'react-helmet-async';\nimport LoadingBox from '../components/LoadingBox';\nimport MessageBox from '../components/MessageBox';\nimport Button from 'react-bootstrap/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'FETCH_REQUEST':\n      return { ...state,\n        loading: true\n      };\n\n    case 'FETCH_SUCCESS':\n      return { ...state,\n        loading: false\n      };\n\n    case 'FETCH_FAIL':\n      return { ...state,\n        loading: false,\n        error: action.payload\n      };\n\n    case 'UPDATE_REQUEST':\n      return { ...state,\n        loadingUpdate: true\n      };\n\n    case 'UPDATE_SUCCESS':\n      return { ...state,\n        loadingUpdate: false\n      };\n\n    case 'UPDATE_FAIL':\n      return { ...state,\n        loadingUpdate: false\n      };\n\n    case 'UPLOAD_REQUEST':\n      return { ...state,\n        loadingUpload: true,\n        errorUpload: ''\n      };\n\n    case 'UPLOAD_SUCCESS':\n      return { ...state,\n        loadingUpload: false,\n        errorUpload: ''\n      };\n\n    case 'UPLOAD_FAIL':\n      return { ...state,\n        loadingUpload: false,\n        errorUpload: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default function AddBusiness() {\n  _s();\n\n  const navigate = useNavigate();\n  const params = useParams();\n  const {\n    id: businessId\n  } = params;\n  const {\n    state\n  } = useContext(Store);\n  const {\n    userInfo\n  } = state;\n  const [{\n    loading,\n    error,\n    loadingUpdate,\n    loadingUpload\n  }, dispatch] = useReducer(reducer, {\n    loading: true,\n    error: ''\n  });\n  const [name, setName] = useState('');\n  const [address, setAddress] = useState('');\n  const [image, setImage] = useState('');\n  const [description, setDescription] = useState('');\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        dispatch({\n          type: 'FETCH_REQUEST'\n        });\n        const {\n          data\n        } = await axios.get(`/api/business/${businessId}`);\n        setName(data.name);\n        setImage(data.image);\n        setAddress(data.address);\n        setDescription(data.description);\n        dispatch({\n          type: 'FETCH_SUCCESS'\n        });\n      } catch (err) {\n        dispatch({\n          type: 'FETCH_FAIL',\n          payload: getError(err)\n        });\n      }\n    };\n\n    fetchData();\n  }, [businessId]);\n\n  const submitHandler = async e => {\n    e.preventDefault();\n\n    try {\n      dispatch({\n        type: 'UPDATE_REQUEST'\n      });\n      await axios.put(`/api/products/${businessId}`, {\n        _id: businessId,\n        name,\n        // slug,\n        // price,\n        image,\n        // images,\n        address,\n        description\n      }, {\n        headers: {\n          Authorization: `Bearer ${userInfo.token}`\n        }\n      });\n      dispatch({\n        type: 'UPDATE_SUCCESS'\n      });\n      toast.success('Product updated successfully');\n      navigate('/admin/products');\n    } catch (err) {\n      toast.error(getError(err));\n      dispatch({\n        type: 'UPDATE_FAIL'\n      });\n    }\n  };\n\n  const uploadFileHandler = async (e, forImages) => {\n    const file = e.target.files[0];\n    const bodyFormData = new FormData();\n    bodyFormData.append('file', file);\n\n    try {\n      dispatch({\n        type: 'UPLOAD_REQUEST'\n      });\n      const {\n        data\n      } = await axios.post('/api/upload', bodyFormData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n          authorization: `Bearer ${userInfo.token}`\n        }\n      });\n      dispatch({\n        type: 'UPLOAD_SUCCESS'\n      });\n\n      if (forImages) {\n        setImages([...images, data.secure_url]);\n      } else {\n        setImage(data.secure_url);\n      }\n\n      toast.success('Image uploaded successfully. click Update to apply it');\n    } catch (err) {\n      toast.error(getError(err));\n      dispatch({\n        type: 'UPLOAD_FAIL',\n        payload: getError(err)\n      });\n    }\n  };\n\n  const deleteFileHandler = async (fileName, f) => {\n    console.log(fileName, f);\n    console.log(images);\n    console.log(images.filter(x => x !== fileName));\n    setImages(images.filter(x => x !== fileName));\n    toast.success('Image removed successfully. click Update to apply it');\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"small-container\",\n    children: [/*#__PURE__*/_jsxDEV(Helmet, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: [\"Edit Product $\", businessId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Edit Product \", businessId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(LoadingBox, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 9\n    }, this) : error ? /*#__PURE__*/_jsxDEV(MessageBox, {\n      variant: \"danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"name\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          value: name,\n          onChange: e => setName(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"image\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Image File\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          value: image,\n          onChange: e => setImage(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"imageFile\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Upload Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"file\",\n          onChange: uploadFileHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 13\n        }, this), loadingUpload && /*#__PURE__*/_jsxDEV(LoadingBox, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 31\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"address\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Count In Stock\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          value: address,\n          onChange: e => setAddress(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"description\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          value: description,\n          onChange: e => setDescription(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          disabled: loadingUpdate,\n          type: \"submit\",\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 13\n        }, this), loadingUpdate && /*#__PURE__*/_jsxDEV(LoadingBox, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 31\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddBusiness, \"zNbephxtu9VdCtCLWLpx72p0h4I=\", false, function () {\n  return [useNavigate, useParams];\n});\n\n_c = AddBusiness;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddBusiness\");","map":{"version":3,"sources":["E:/DuiPangres/frontend/src/screens/AddBusiness.js"],"names":["React","useContext","useEffect","useReducer","useState","useNavigate","useParams","toast","axios","Store","getError","Container","ListGroup","Form","Helmet","LoadingBox","MessageBox","Button","reducer","state","action","type","loading","error","payload","loadingUpdate","loadingUpload","errorUpload","AddBusiness","navigate","params","id","businessId","userInfo","dispatch","name","setName","address","setAddress","image","setImage","description","setDescription","fetchData","data","get","err","submitHandler","e","preventDefault","put","_id","headers","Authorization","token","success","uploadFileHandler","forImages","file","target","files","bodyFormData","FormData","append","post","authorization","setImages","images","secure_url","deleteFileHandler","fileName","f","console","log","filter","x","value"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useReducer, useState } from 'react';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\nimport axios from 'axios';\r\nimport { Store } from '../Store';\r\nimport { getError } from '../utils';\r\nimport Container from 'react-bootstrap/Container';\r\nimport ListGroup from 'react-bootstrap/ListGroup';\r\nimport Form from 'react-bootstrap/Form';\r\nimport { Helmet } from 'react-helmet-async';\r\nimport LoadingBox from '../components/LoadingBox';\r\nimport MessageBox from '../components/MessageBox';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\n\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'FETCH_REQUEST':\r\n      return { ...state, loading: true };\r\n    case 'FETCH_SUCCESS':\r\n      return { ...state, loading: false };\r\n    case 'FETCH_FAIL':\r\n      return { ...state, loading: false, error: action.payload };\r\n    case 'UPDATE_REQUEST':\r\n      return { ...state, loadingUpdate: true };\r\n    case 'UPDATE_SUCCESS':\r\n      return { ...state, loadingUpdate: false };\r\n    case 'UPDATE_FAIL':\r\n      return { ...state, loadingUpdate: false };\r\n    case 'UPLOAD_REQUEST':\r\n      return { ...state, loadingUpload: true, errorUpload: '' };\r\n    case 'UPLOAD_SUCCESS':\r\n      return {\r\n        ...state,\r\n        loadingUpload: false,\r\n        errorUpload: '',\r\n      };\r\n    case 'UPLOAD_FAIL':\r\n      return { ...state, loadingUpload: false, errorUpload: action.payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default function AddBusiness() {\r\n\r\n  const navigate = useNavigate();\r\n  const params = useParams();\r\n  const { id: businessId } = params;\r\n\r\n  const { state } = useContext(Store);\r\n  const { userInfo } = state;\r\n  const [{ loading, error, loadingUpdate, loadingUpload }, dispatch] =\r\n  useReducer(reducer, {\r\n  \r\n    loading: true,\r\n    error: '',\r\n  });\r\n\r\n\r\n  const [name, setName] = useState('');\r\n  const [address, setAddress] = useState('');\r\n  const [image, setImage] = useState('');\r\n  const [description, setDescription] = useState('');\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        dispatch({ type: 'FETCH_REQUEST' });\r\n        const { data } = await axios.get(`/api/business/${businessId}`);\r\n        setName(data.name);    \r\n        setImage(data.image);\r\n        setAddress(data.address);\r\n        setDescription(data.description);\r\n        dispatch({ type: 'FETCH_SUCCESS' });\r\n      } catch (err) {\r\n        dispatch({\r\n          type: 'FETCH_FAIL',\r\n          payload: getError(err),\r\n        });\r\n      }\r\n    };\r\n    fetchData();\r\n  }, [businessId]);\r\n  const submitHandler = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      dispatch({ type: 'UPDATE_REQUEST' });\r\n      await axios.put(\r\n        `/api/products/${businessId}`,\r\n        {\r\n          _id: businessId,\r\n          name,\r\n          // slug,\r\n          // price,\r\n          image,\r\n          // images,\r\n          address,\r\n          description,\r\n        },\r\n        {\r\n          headers: { Authorization: `Bearer ${userInfo.token}` },\r\n        }\r\n      );\r\n      dispatch({\r\n        type: 'UPDATE_SUCCESS',\r\n      });\r\n      toast.success('Product updated successfully');\r\n      navigate('/admin/products');\r\n    } catch (err) {\r\n      toast.error(getError(err));\r\n      dispatch({ type: 'UPDATE_FAIL' });\r\n    }\r\n  };\r\n  const uploadFileHandler = async (e, forImages) => {\r\n    const file = e.target.files[0];\r\n    const bodyFormData = new FormData();\r\n    bodyFormData.append('file', file);\r\n    try {\r\n      dispatch({ type: 'UPLOAD_REQUEST' });\r\n      const { data } = await axios.post('/api/upload', bodyFormData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n          authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      });\r\n      dispatch({ type: 'UPLOAD_SUCCESS' });\r\n\r\n      if (forImages) {\r\n        setImages([...images, data.secure_url]);\r\n      } else {\r\n        setImage(data.secure_url);\r\n      }\r\n      toast.success('Image uploaded successfully. click Update to apply it');\r\n    } catch (err) {\r\n      toast.error(getError(err));\r\n      dispatch({ type: 'UPLOAD_FAIL', payload: getError(err) });\r\n    }\r\n  };\r\n  const deleteFileHandler = async (fileName, f) => {\r\n    console.log(fileName, f);\r\n    console.log(images);\r\n    console.log(images.filter((x) => x !== fileName));\r\n    setImages(images.filter((x) => x !== fileName));\r\n    toast.success('Image removed successfully. click Update to apply it');\r\n  };\r\n\r\n  return (\r\n    <Container className=\"small-container\">\r\n      <Helmet>\r\n        <title>Edit Product ${businessId}</title>\r\n      </Helmet>\r\n      <h1>Edit Product {businessId}</h1>\r\n\r\n      {loading ? (\r\n        <LoadingBox></LoadingBox>\r\n      ) : error ? (\r\n        <MessageBox variant=\"danger\">{error}</MessageBox>\r\n      ) : (\r\n        <Form onSubmit={submitHandler}>\r\n          <Form.Group className=\"mb-3\" controlId=\"name\">\r\n            <Form.Label>Name</Form.Label>\r\n            <Form.Control\r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}\r\n              required\r\n            />\r\n          </Form.Group>\r\n          {/* <Form.Group className=\"mb-3\" controlId=\"slug\">\r\n            <Form.Label> Product Keyword</Form.Label>\r\n            <Form.Control\r\n              value={slug}\r\n              onChange={(e) => setSlug(e.target.value)}\r\n              required\r\n            />\r\n          </Form.Group> */}\r\n          {/* <Form.Group className=\"mb-3\" controlId=\"name\">\r\n            <Form.Label>Price</Form.Label>\r\n\r\n          \r\n            <Form.Control\r\n            type=\"number\"\r\n              value={price}\r\n              onChange={(e) => setPrice(e.target.value)}\r\n              min = \"0\"\r\n              required\r\n            />\r\n          </Form.Group> */}\r\n          <Form.Group className=\"mb-3\" controlId=\"image\">\r\n            <Form.Label>Image File</Form.Label>\r\n            <Form.Control\r\n              value={image}\r\n              onChange={(e) => setImage(e.target.value)}\r\n              required\r\n            />\r\n          </Form.Group>\r\n          <Form.Group className=\"mb-3\" controlId=\"imageFile\">\r\n            <Form.Label>Upload Image</Form.Label>\r\n            <Form.Control type=\"file\" onChange={uploadFileHandler} />\r\n            {loadingUpload && <LoadingBox></LoadingBox>}\r\n          </Form.Group>\r\n\r\n          {/* <Form.Group className=\"mb-3\" controlId=\"additionalImage\">\r\n            <Form.Label>Additional Images</Form.Label>\r\n            {images.length === 0 && <MessageBox>No image</MessageBox>}\r\n            <ListGroup variant=\"flush\">\r\n              {images.map((x) => (\r\n                <ListGroup.Item key={x}>\r\n                  {x}\r\n                  <Button variant=\"light\" onClick={() => deleteFileHandler(x)}>\r\n                    <i className=\"fa fa-times-circle\"></i>\r\n                  </Button>\r\n                </ListGroup.Item>\r\n              ))}\r\n            </ListGroup>\r\n          </Form.Group> */}\r\n          {/* <Form.Group className=\"mb-3\" controlId=\"additionalImageFile\">\r\n            <Form.Label>Upload Aditional Image</Form.Label>\r\n            <Form.Control\r\n              type=\"file\"\r\n              onChange={(e) => uploadFileHandler(e, true)}\r\n            />\r\n            {loadingUpload && <LoadingBox></LoadingBox>}\r\n          </Form.Group> */}\r\n\r\n          {/* <Form.Group className=\"mb-3\" controlId=\"category\">\r\n            <Form.Label>Category</Form.Label>\r\n            <Form.Control\r\n              value={category}\r\n              onChange={(e) => setCategory(e.target.value)}\r\n              required\r\n            />\r\n          </Form.Group> */}\r\n          {/* <Form.Group className=\"mb-3\" controlId=\"brand\">\r\n            <Form.Label>Brand</Form.Label>\r\n            <Form.Control\r\n              value={brand}\r\n              onChange={(e) => setBrand(e.target.value)}\r\n              required\r\n            />\r\n          </Form.Group> */}\r\n          <Form.Group className=\"mb-3\" controlId=\"address\">\r\n            <Form.Label>Count In Stock</Form.Label>\r\n            <Form.Control\r\n              value={address}\r\n              onChange={(e) => setAddress(e.target.value)}\r\n              required\r\n            />\r\n          </Form.Group>\r\n          <Form.Group className=\"mb-3\" controlId=\"description\">\r\n            <Form.Label>Description</Form.Label>\r\n            <Form.Control\r\n              value={description}\r\n              onChange={(e) => setDescription(e.target.value)}\r\n              required\r\n            />\r\n          </Form.Group>\r\n          <div className=\"mb-3\">\r\n            <Button disabled={loadingUpdate} type=\"submit\">\r\n              Update\r\n            </Button>\r\n            {loadingUpdate && <LoadingBox></LoadingBox>}\r\n          </div>\r\n        </Form>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}