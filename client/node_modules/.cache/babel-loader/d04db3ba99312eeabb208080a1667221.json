{"ast":null,"code":"var _jsxFileName = \"D:\\\\DuiPangres\\\\frontend\\\\src\\\\screens\\\\AddBusiness.js\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport React, { useContext, useEffect, useReducer, useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { Store } from '../Store';\nimport { getError } from '../utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'FETCH_REQUEST':\n      return { ...state,\n        loading: true\n      };\n\n    case 'FETCH_SUCCESS':\n      return { ...state,\n        loading: false\n      };\n\n    case 'FETCH_FAIL':\n      return { ...state,\n        loading: false,\n        error: action.payload\n      };\n\n    case 'UPDATE_REQUEST':\n      return { ...state,\n        loadingUpdate: true\n      };\n\n    case 'UPDATE_SUCCESS':\n      return { ...state,\n        loadingUpdate: false\n      };\n\n    case 'UPDATE_FAIL':\n      return { ...state,\n        loadingUpdate: false\n      };\n\n    case 'UPLOAD_REQUEST':\n      return { ...state,\n        loadingUpload: true,\n        errorUpload: ''\n      };\n\n    case 'UPLOAD_SUCCESS':\n      return { ...state,\n        loadingUpload: false,\n        errorUpload: ''\n      };\n\n    case 'UPLOAD_FAIL':\n      return { ...state,\n        loadingUpload: false,\n        errorUpload: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default function AddBusiness() {\n  _s();\n\n  const navigate = useNavigate();\n  const params = useParams();\n  const {\n    id: businessId\n  } = params;\n  const {\n    state\n  } = useContext(Store);\n  const {\n    userInfo\n  } = state;\n  const [{\n    loading,\n    error,\n    loadingUpdate,\n    loadingUpload\n  }, dispatch] = useReducer(reducer, {\n    loading: true,\n    error: ''\n  });\n  const [name, setName] = useState('');\n  const [image, setImage] = useState('');\n  const [Address, setAddress] = useState('');\n  const [description, setDescription] = useState('');\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        dispatch({\n          type: 'FETCH_REQUEST'\n        });\n        const {\n          data\n        } = await axios.get(`/api/business/`);\n        setName(data.name);\n        setImage(data.image);\n        setAddress(data.Address);\n        setDescription(data.description);\n        dispatch({\n          type: 'FETCH_SUCCESS'\n        });\n      } catch (err) {\n        dispatch({\n          type: 'FETCH_FAIL',\n          payload: getError(err)\n        });\n      }\n    };\n\n    fetchData();\n  }, [businessId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"AddBusiness\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddBusiness, \"sY1sLBF2fLom3WZUAEG4hGSN4PA=\", false, function () {\n  return [useNavigate, useParams];\n});\n\n_c = AddBusiness;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddBusiness\");","map":{"version":3,"sources":["D:/DuiPangres/frontend/src/screens/AddBusiness.js"],"names":["axios","React","useContext","useEffect","useReducer","useState","useNavigate","useParams","Store","getError","reducer","state","action","type","loading","error","payload","loadingUpdate","loadingUpload","errorUpload","AddBusiness","navigate","params","id","businessId","userInfo","dispatch","name","setName","image","setImage","Address","setAddress","description","setDescription","fetchData","data","get","err"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport React, { useContext, useEffect, useReducer, useState } from 'react'\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport { Store } from '../Store';\r\nimport { getError } from '../utils';\r\n\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'FETCH_REQUEST':\r\n      return { ...state, loading: true };\r\n    case 'FETCH_SUCCESS':\r\n      return { ...state, loading: false };\r\n    case 'FETCH_FAIL':\r\n      return { ...state, loading: false, error: action.payload };\r\n    case 'UPDATE_REQUEST':\r\n      return { ...state, loadingUpdate: true };\r\n    case 'UPDATE_SUCCESS':\r\n      return { ...state, loadingUpdate: false };\r\n    case 'UPDATE_FAIL':\r\n      return { ...state, loadingUpdate: false };\r\n    case 'UPLOAD_REQUEST':\r\n      return { ...state, loadingUpload: true, errorUpload: '' };\r\n    case 'UPLOAD_SUCCESS':\r\n      return {\r\n        ...state,\r\n        loadingUpload: false,\r\n        errorUpload: '',\r\n      };\r\n    case 'UPLOAD_FAIL':\r\n      return { ...state, loadingUpload: false, errorUpload: action.payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default function AddBusiness() {\r\n  const navigate = useNavigate();\r\n  const params = useParams(); \r\n  const { id: businessId } = params;\r\n\r\n  const { state } = useContext(Store);\r\n  const { userInfo } = state;\r\n  const [{ loading, error, loadingUpdate, loadingUpload }, dispatch] =\r\n    useReducer(reducer, {\r\n      loading: true,\r\n      error: '',\r\n    });\r\n\r\n  const [name, setName] = useState('');\r\n  const [image, setImage] = useState('');\r\n  const [Address, setAddress] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        dispatch({ type: 'FETCH_REQUEST' });\r\n        const { data } = await axios.get(`/api/business/`);\r\n        setName(data.name);\r\n   \r\n        setImage(data.image);\r\n        setAddress(data.Address);\r\n        setDescription(data.description);\r\n        dispatch({ type: 'FETCH_SUCCESS' });\r\n      } catch (err) {\r\n        dispatch({\r\n          type: 'FETCH_FAIL',\r\n          payload: getError(err),\r\n        });\r\n      }\r\n    };\r\n    fetchData();\r\n  }, [businessId]);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div>AddBusiness</div>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}