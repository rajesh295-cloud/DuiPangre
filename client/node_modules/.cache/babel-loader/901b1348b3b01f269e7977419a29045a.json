{"ast":null,"code":"var _jsxFileName = \"F:\\\\DuiPangres\\\\frontend\\\\src\\\\screens\\\\SingleBusiness.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useContext, useEffect, useReducer, useRef, useState } from \"react\";\nimport { Link, useNavigate, useParams } from \"react-router-dom\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Card from \"react-bootstrap/Card\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\nimport Form from \"react-bootstrap/Form\";\nimport Badge from \"react-bootstrap/Badge\";\nimport Button from \"react-bootstrap/Button\";\nimport Rating from \"../components/Rating\";\nimport { Helmet } from \"react-helmet-async\";\nimport LoadingBox from \"../components/LoadingBox\";\nimport MessageBox from \"../components/MessageBox\";\nimport { getError } from \"../utils\";\nimport { Store } from \"../Store\";\nimport FloatingLabel from \"react-bootstrap/FloatingLabel\";\nimport { toast } from \"react-toastify\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"REFRESH_BUSINESS\":\n      return { ...state,\n        business: action.payload\n      };\n\n    case \"CREATE_REQUEST\":\n      return { ...state,\n        loadingCreateReview: true\n      };\n\n    case \"CREATE_SUCCESS\":\n      return { ...state,\n        loadingCreateReview: false\n      };\n\n    case \"CREATE_FAIL\":\n      return { ...state,\n        loadingCreateReview: false\n      };\n\n    case \"FETCH_REQUEST\":\n      return { ...state,\n        loading: true\n      };\n\n    case \"FETCH_SUCCESS\":\n      return { ...state,\n        business: action.payload,\n        loading: false\n      };\n\n    case \"FETCH_FAIL\":\n      return { ...state,\n        loading: false,\n        error: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nfunction SingleBusinessScreen() {\n  _s();\n\n  let reviewsRef = useRef();\n  const [rating, setRating] = useState(0);\n  const [comment, setComment] = useState(\"\");\n  const [selectedImage, setSelectedImage] = useState(\"\");\n  const navigate = useNavigate();\n  const params = useParams();\n  const {\n    slug\n  } = params;\n  const [{\n    loading,\n    error,\n    business,\n    loadingCreateReview\n  }, dispatch] = useReducer(reducer, {\n    business: [],\n    loading: true,\n    error: \"\"\n  });\n  useEffect(() => {\n    const fetchData = async () => {\n      dispatch({\n        type: \"FETCH_REQUEST\"\n      });\n\n      try {\n        const result = await axios.get(`/api/businesses/slug/${slug}`);\n        dispatch({\n          type: \"FETCH_SUCCESS\",\n          payload: result.data\n        });\n        console.log(result);\n      } catch (err) {\n        dispatch({\n          type: \"FETCH_FAIL\",\n          payload: getError(err)\n        });\n      }\n    };\n\n    fetchData();\n  }, [slug]);\n  const {\n    state,\n    dispatch: ctxDispatch\n  } = useContext(Store);\n  const {\n    cart,\n    userInfo\n  } = state;\n\n  const addToCartHandler = async () => {\n    const existItem = cart.cartItems.find(x => x._id === business._id);\n    const quantity = existItem ? existItem.quantity + 1 : 1;\n    const {\n      data\n    } = await axios.get(`/api/businesses/${business._id}`);\n\n    if (data.countInStock < quantity) {\n      window.alert(\"Sorry. Product is out of stock\");\n      return;\n    }\n\n    ctxDispatch({\n      type: \"CART_ADD_ITEM\",\n      payload: { ...business,\n        quantity\n      }\n    });\n    navigate(\"/cart\");\n  };\n\n  const submitHandler = async e => {\n    e.preventDefault();\n    console.log('kkkk');\n    let {\n      mobile,\n      datetime,\n      address\n    } = e.target.elements;\n    mobile = mobile.value;\n    address = address.value;\n    datetime = datetime.value.split('T');\n    const date = datetime[0];\n    const time = datetime[1];\n    const {\n      data\n    } = await Axios.post('/api/users/signin', {\n      email,\n      password\n    });\n    navigate(redirect || '/');\n    console.log(mobile, address, date, time);\n  };\n\n  return loading ? /*#__PURE__*/_jsxDEV(LoadingBox, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this) : error ? /*#__PURE__*/_jsxDEV(MessageBox, {\n    variant: \"danger\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"img-large\",\n          src: selectedImage || business.image,\n          alt: business.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(ListGroup, {\n          variant: \"flush\",\n          children: [/*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            children: [/*#__PURE__*/_jsxDEV(Helmet, {\n              children: /*#__PURE__*/_jsxDEV(\"title\", {\n                children: business.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n              children: business.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            children: [\"Description:\", /*#__PURE__*/_jsxDEV(\"p\", {\n              children: business.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: /*#__PURE__*/_jsxDEV(ListGroup, {\n              variant: \"flush\",\n              children: [/*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                children: /*#__PURE__*/_jsxDEV(Row, {\n                  children: [/*#__PURE__*/_jsxDEV(Col, {\n                    children: \"Price:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 169,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    children: [\"$\", business.price]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 170,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 168,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                children: /*#__PURE__*/_jsxDEV(Row, {\n                  children: [/*#__PURE__*/_jsxDEV(Col, {\n                    children: \"Status:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 175,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    children: business.countInStock > 0 ? /*#__PURE__*/_jsxDEV(Badge, {\n                      bg: \"success\",\n                      children: \"In Stock\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 178,\n                      columnNumber: 25\n                    }, this) : /*#__PURE__*/_jsxDEV(Badge, {\n                      bg: \"danger\",\n                      children: \"Unavailable\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 180,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 176,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 174,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 17\n              }, this), business.countInStock != 0 && /*#__PURE__*/_jsxDEV(Form, {\n                onSubmit: submitHandler,\n                children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                  className: \"mb-3\",\n                  controlId: \"email\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Booking Date\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 189,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    name: \"datetime\",\n                    type: \"datetime-local\",\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 190,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 188,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                  className: \"mb-3\",\n                  controlId: \"email\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Contact Number\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 202,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    name: \"mobile\",\n                    type: \"number\",\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 203,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 201,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                  className: \"mb-3\",\n                  controlId: \"email\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Pickup Address\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 206,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    name: \"address\",\n                    type: \"text\",\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 207,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 205,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  type: \"submit\",\n                  variant: \"primary\",\n                  children: \"Book Appointment\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 209,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SingleBusinessScreen, \"+FADpr9avmQM80HeZcsjPl1e2v4=\", false, function () {\n  return [useNavigate, useParams];\n});\n\n_c = SingleBusinessScreen;\nexport default SingleBusinessScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"SingleBusinessScreen\");","map":{"version":3,"sources":["F:/DuiPangres/frontend/src/screens/SingleBusiness.js"],"names":["axios","useContext","useEffect","useReducer","useRef","useState","Link","useNavigate","useParams","Row","Col","Card","ListGroup","Form","Badge","Button","Rating","Helmet","LoadingBox","MessageBox","getError","Store","FloatingLabel","toast","reducer","state","action","type","business","payload","loadingCreateReview","loading","error","SingleBusinessScreen","reviewsRef","rating","setRating","comment","setComment","selectedImage","setSelectedImage","navigate","params","slug","dispatch","fetchData","result","get","data","console","log","err","ctxDispatch","cart","userInfo","addToCartHandler","existItem","cartItems","find","x","_id","quantity","countInStock","window","alert","submitHandler","e","preventDefault","mobile","datetime","address","target","elements","value","split","date","time","Axios","post","email","password","redirect","image","name","description","price"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport { useContext, useEffect, useReducer, useRef, useState } from \"react\";\r\nimport { Link, useNavigate, useParams } from \"react-router-dom\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport ListGroup from \"react-bootstrap/ListGroup\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Badge from \"react-bootstrap/Badge\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Rating from \"../components/Rating\";\r\nimport { Helmet } from \"react-helmet-async\";\r\nimport LoadingBox from \"../components/LoadingBox\";\r\nimport MessageBox from \"../components/MessageBox\";\r\nimport { getError } from \"../utils\";\r\nimport { Store } from \"../Store\";\r\nimport FloatingLabel from \"react-bootstrap/FloatingLabel\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"REFRESH_BUSINESS\":\r\n      return { ...state, business: action.payload };\r\n    case \"CREATE_REQUEST\":\r\n      return { ...state, loadingCreateReview: true };\r\n    case \"CREATE_SUCCESS\":\r\n      return { ...state, loadingCreateReview: false };\r\n    case \"CREATE_FAIL\":\r\n      return { ...state, loadingCreateReview: false };\r\n    case \"FETCH_REQUEST\":\r\n      return { ...state, loading: true };\r\n    case \"FETCH_SUCCESS\":\r\n      return { ...state, business: action.payload, loading: false };\r\n    case \"FETCH_FAIL\":\r\n      return { ...state, loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nfunction SingleBusinessScreen() {\r\n  let reviewsRef = useRef();\r\n\r\n  const [rating, setRating] = useState(0);\r\n  const [comment, setComment] = useState(\"\");\r\n  const [selectedImage, setSelectedImage] = useState(\"\");\r\n\r\n  const navigate = useNavigate();\r\n  const params = useParams();\r\n  const { slug } = params;\r\n\r\n  const [{ loading, error, business, loadingCreateReview }, dispatch] =\r\n    useReducer(reducer, {\r\n      business: [],\r\n      loading: true,\r\n      error: \"\",\r\n    });\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      dispatch({ type: \"FETCH_REQUEST\" });\r\n      try {\r\n        const result = await axios.get(`/api/businesses/slug/${slug}`);\r\n        dispatch({ type: \"FETCH_SUCCESS\", payload: result.data });\r\n        console.log(result);\r\n      } catch (err) {\r\n        dispatch({ type: \"FETCH_FAIL\", payload: getError(err) });\r\n      }\r\n    };\r\n    fetchData();\r\n  }, [slug]);\r\n\r\n  const { state, dispatch: ctxDispatch } = useContext(Store);\r\n  const { cart, userInfo } = state;\r\n  const addToCartHandler = async () => {\r\n    const existItem = cart.cartItems.find((x) => x._id === business._id);\r\n    const quantity = existItem ? existItem.quantity + 1 : 1;\r\n    const { data } = await axios.get(`/api/businesses/${business._id}`);\r\n    if (data.countInStock < quantity) {\r\n      window.alert(\"Sorry. Product is out of stock\");\r\n      return;\r\n    }\r\n    ctxDispatch({\r\n      type: \"CART_ADD_ITEM\",\r\n      payload: { ...business, quantity },\r\n    });\r\n    navigate(\"/cart\");\r\n  };\r\n\r\n  const submitHandler = async (e) => {\r\n    e.preventDefault();\r\n    console.log('kkkk');\r\n    let {mobile, datetime, address} = e.target.elements\r\n    mobile = mobile.value\r\n    address = address.value\r\n    datetime = datetime.value.split('T');\r\n    const date=datetime[0]\r\n    const time=datetime[1]\r\n\r\n\r\n    const { data } = await Axios.post('/api/users/signin', {\r\n      email,\r\n      password,\r\n    });\r\n\r\n    navigate(redirect || '/');\r\n\r\n    console.log(mobile, address, date,time);\r\n\r\n  };\r\n  return loading ? (\r\n    <LoadingBox />\r\n  ) : error ? (\r\n    <MessageBox variant=\"danger\">{error}</MessageBox>\r\n  ) : (\r\n    <div>\r\n      <Row>\r\n        <Col md={4}>\r\n          <img\r\n            className=\"img-large\"\r\n            src={selectedImage || business.image}\r\n            alt={business.name}\r\n          ></img>\r\n        </Col>\r\n        <Col md={4}>\r\n          <ListGroup variant=\"flush\">\r\n            <ListGroup.Item>\r\n              <Helmet>\r\n                <title>{business.name}</title>\r\n              </Helmet>\r\n              <h1>{business.name}</h1>\r\n            </ListGroup.Item>\r\n            {/* <ListGroup.Item>\r\n              <Rating\r\n                rating={business.rating}\r\n                numReviews={business.numReviews}\r\n              ></Rating>\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>Pirce : ${business.price}</ListGroup.Item>\r\n            <ListGroup.Item>\r\n              <Row xs={1} md={2} className=\"g-2\">\r\n                {[business.image, ...business.images].map((x) => (\r\n                  <Col key={x}>\r\n                    <Card>\r\n                      <Button\r\n                        className=\"thumbnail\"\r\n                        type=\"button\"\r\n                        variant=\"light\"\r\n                        onClick={() => setSelectedImage(x)}\r\n                      >\r\n                        <Card.Img variant=\"top\" src={x} alt=\"product\" />\r\n                      </Button>\r\n                    </Card>\r\n                  </Col>\r\n                ))}\r\n              </Row>\r\n            </ListGroup.Item> */}\r\n            <ListGroup.Item>\r\n              Description:\r\n              <p>{business.description}</p>\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n          <Card>\r\n            <Card.Body>\r\n              <ListGroup variant=\"flush\">\r\n                <ListGroup.Item>\r\n                  <Row>\r\n                    <Col>Price:</Col>\r\n                    <Col>${business.price}</Col>\r\n                  </Row>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                  <Row>\r\n                    <Col>Status:</Col>\r\n                    <Col>\r\n                      {business.countInStock > 0 ? (\r\n                        <Badge bg=\"success\">In Stock</Badge>\r\n                      ) : (\r\n                        <Badge bg=\"danger\">Unavailable</Badge>\r\n                      )}\r\n                    </Col>\r\n                  </Row>\r\n                </ListGroup.Item>\r\n\r\n                {business.countInStock != 0 && (\r\n                  <Form onSubmit={submitHandler}>\r\n                    <Form.Group className=\"mb-3\" controlId=\"email\">\r\n                      <Form.Label>Booking Date</Form.Label>\r\n                      <Form.Control name=\"datetime\" type=\"datetime-local\" required />\r\n                    </Form.Group>\r\n                    {/* <Form.Group className=\"mb-3\" controlId=\"email\">\r\n          <Form.Label>Booking Time</Form.Label>\r\n          <Form.Control\r\n            type=\"date\"\r\n\r\n            required\r\n          />\r\n        </Form.Group> */}\r\n\r\n                    <Form.Group className=\"mb-3\" controlId=\"email\">\r\n                      <Form.Label>Contact Number</Form.Label>\r\n                      <Form.Control name=\"mobile\" type=\"number\" required />\r\n                    </Form.Group>\r\n                    <Form.Group className=\"mb-3\" controlId=\"email\">\r\n                      <Form.Label>Pickup Address</Form.Label>\r\n                      <Form.Control name=\"address\" type=\"text\" required />\r\n                    </Form.Group>\r\n                    <Button type=\"submit\" variant=\"primary\">\r\n                      Book Appointment\r\n                    </Button>\r\n                  </Form>\r\n                )}\r\n              </ListGroup>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n      {/* <div className=\"my-3\">\r\n        <h2 ref={reviewsRef}>Reviews</h2>\r\n        <div className=\"mb-3\">\r\n          {business.reviews.length === 0 && (\r\n            <MessageBox>There is no review</MessageBox>\r\n          )}\r\n        </div>\r\n        <ListGroup>\r\n          {business.reviews.map((review) => (\r\n            <ListGroup.Item key={review._id}>\r\n              <strong>{review.name}</strong>\r\n              <Rating rating={review.rating} caption=\" \"></Rating>\r\n              <p>{review.createdAt.substring(0, 10)}</p>\r\n              <p>{review.comment}</p>\r\n            </ListGroup.Item>\r\n          ))}\r\n        </ListGroup>\r\n        <div className=\"my-3\">\r\n          {(userInfo.isAdmin !== true) ? (\r\n            <form onSubmit={submitHandler}>\r\n              <h2>Rate & review</h2>\r\n              <Form.Group className=\"mb-3\" controlId=\"rating\">\r\n                <Form.Label>Rating</Form.Label>\r\n                <Form.Select\r\n                  aria-label=\"Rating\"\r\n                  value={rating}\r\n                  onChange={(e) => setRating(e.target.value)}\r\n                >\r\n                  <option value=\"\">Select...</option>\r\n                  <option value=\"1\">1- Poor</option>\r\n                  <option value=\"2\">2- Fair</option>\r\n                  <option value=\"3\">3- Good</option>\r\n                  <option value=\"4\">4- Very good</option>\r\n                  <option value=\"5\">5- Excellent</option>\r\n                </Form.Select>\r\n              </Form.Group>\r\n              <FloatingLabel\r\n                controlId=\"floatingTextarea\"\r\n                label=\"Comments\"\r\n                className=\"mb-3\"\r\n              >\r\n                <Form.Control\r\n                  as=\"textarea\"\r\n                  placeholder=\"Leave a comment here\"\r\n                  value={comment}\r\n                  onChange={(e) => setComment(e.target.value)}\r\n                />\r\n              </FloatingLabel>\r\n\r\n              <div className=\"mb-3\">\r\n                <Button disabled={loadingCreateReview} type=\"submit\">\r\n                  Submit\r\n                </Button>\r\n                {loadingCreateReview && <LoadingBox></LoadingBox>}\r\n              </div>\r\n            </form>\r\n          ) : (\r\n            <MessageBox>\r\n              Please{' '}\r\n              <Link to={`/signin?redirect=/businesses/${business.slug}`}>\r\n                Sign In\r\n              </Link>{' '}\r\n              to write a review\r\n            </MessageBox>\r\n          )}\r\n        </div></div> */}\r\n    </div>\r\n  );\r\n}\r\nexport default SingleBusinessScreen;\r\n"]},"metadata":{},"sourceType":"module"}